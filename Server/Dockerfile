FROM ubuntu AS build
#install requirements
RUN apt-get update
RUN apt-get upgrade -y
RUN apt-get install -y nodejs
RUN apt-get install -y npm
RUN npm install -g typescript
#change directory
WORKDIR /backend
#install npm modules
COPY package.json package.json
COPY package-lock.json package-lock.json
RUN npm install
#copy everything
COPY . .
#typescript build
RUN tsc -p .


FROM node:21-alpine AS runner
RUN apk add --no-cache libc6-compat
WORKDIR /backend

COPY --from=build /backend /backend/
#Environment Variables --start
ARG FRONTEND_SERVER_ORIGIN
ENV FRONTEND_SERVER_ORIGIN=${FRONTEND_SERVER_ORIGIN}
ARG DB_USER
ENV DB_USER=${DB_USER}
ARG DB_PASS
ENV DB_PASS=${DB_PASS}
ARG DB_HOST
ENV DB_HOST=${DB_HOST}
ARG DB_PORT
ENV DB_PORT=${DB_PORT}
ARG DB_NAME
ENV DB_NAME=${DB_NAME}
ARG SMTP_USER
ENV SMTP_USER=${SMTP_USER}
ARG SMTP_SUPPORT
ENV SMTP_SUPPORT=${SMTP_SUPPORT}
ARG SMTP_HOST
ENV SMTP_HOST=${SMTP_HOST}
ARG SMTP_SENDERNAME
ENV SMTP_SENDERNAME=${SMTP_HOST}
ARG SMTP_PASS
ENV SMTP_PASS=${SMTP_PASS}
ARG JWT_ENCRYPTION_KEY
ENV JWT_ENCRYPTION_KEY=${JWT_ENCRYPTION_KEY}
ARG JWT_AUTH_KEY
ENV JWT_AUTH_KEY=${JWT_AUTH_KEY}
ARG GOOGLE_CLIENT_ID
ENV GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
ARG GOOGLE_CLIENT_SECRET
ENV GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
ARG STRIPE_PUBLISHABLE_KEY
ENV STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
#--end
EXPOSE 3500
ENTRYPOINT [ "node","index.js" ]